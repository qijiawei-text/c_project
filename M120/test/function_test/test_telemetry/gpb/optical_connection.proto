//
// Copyrights (c)  2017, Juniper Networks, Inc.
// All rights reserved.
//

//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

//
// This file defines the messages in Protocol Buffers format used by
// the optical connection. The-top level messages is OpticalConnection.
//

//Oplink 11/11/2019 - upgrade to proto 3

syntax = "proto3";

//
// Top-level message
//
message OpticalConnection
{
    repeated OpticalConnectionInfo conn_info      = 1;
}

message OpticalConnectionInfo
{
    // connection name    
    string                 connection_id   = 1;

    // Channel Power Control
    int32                  pwr_ctrl_mode   = 2;

    // Maintenance State
    int32                  maint_state     = 3;

    // Start Frequency
    double                 start_freq      = 4;

    // End Frequency
    double                 end_freq        = 5;

    // Input Port Reference
    int32                  input_port_ref  = 6;

    // Output Port Reference
    int32                  output_port_ref = 7;

    // Blocked Config (as provisioned)
    bool                   blocked_config  = 8;

    // Blocked State (actual)
    bool                   blocked         = 9;

    // Attenuation Target
    double                 target_attn     = 10;

    // Actual Attenuation
    double                 measured_attn   = 11;

    // Power Target (at output port reference)
    double                 target_pwr      = 12;

    // Actual Power (at output port reference)
    double                 measured_pwr    = 13;

    // Power Target Tolerance
    double                 target_pwr_tol  = 14;
}
