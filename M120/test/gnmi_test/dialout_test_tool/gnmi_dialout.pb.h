/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* source: gnmi_dialout.proto */

#ifndef GOOGLE_PROTOBUF_INCLUDED_gnmi_5fdialout_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gnmi_5fdialout_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  /* IWYU pragma: export */
#include <google/protobuf/extension_set.h>  /* IWYU pragma: export */
#include <google/protobuf/unknown_field_set.h>
#include "gnmi_ext.pb.h"
#include "gnmi.pb.h"
/* @@protoc_insertion_point(includes) */
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gnmi_5fdialout_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  /* namespace internal */
PROTOBUF_NAMESPACE_CLOSE

/* Internal implementation detail -- do not use these members. */
struct TableStruct_gnmi_5fdialout_2eproto {
    static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
    static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
    static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gnmi_5fdialout_2eproto;
namespace gnmi_dialout {
class PublishResponse;
class PublishResponseDefaultTypeInternal;
extern PublishResponseDefaultTypeInternal _PublishResponse_default_instance_;
}  /* namespace gnmi_dialout */
PROTOBUF_NAMESPACE_OPEN
template<> ::gnmi_dialout::PublishResponse * Arena::CreateMaybeMessage<::gnmi_dialout::PublishResponse>(Arena *);
PROTOBUF_NAMESPACE_CLOSE
namespace gnmi_dialout {

/* =================================================================== */

class PublishResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gnmi_dialout.PublishResponse) */ {
public:
    inline PublishResponse() : PublishResponse(nullptr) {
    };
    virtual ~PublishResponse();

    PublishResponse(const PublishResponse &from);
    PublishResponse(PublishResponse && from) noexcept
    : PublishResponse() {
        *this = ::std::move(from);
    }

    inline PublishResponse&
    operator=(const PublishResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline PublishResponse&
    operator=(PublishResponse && from) noexcept
    {
        if (GetArena() == from.GetArena()) {
            if (this != &from) InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *descriptor() {
        return GetDescriptor();
    }
    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *GetDescriptor() {
        return GetMetadataStatic().descriptor;
    }
    static const ::PROTOBUF_NAMESPACE_ID::Reflection *GetReflection() {
        return GetMetadataStatic().reflection;
    }
    static const PublishResponse& default_instance();

    static void InitAsDefaultInstance(); /* FOR INTERNAL USE ONLY */
    static inline const PublishResponse *
    internal_default_instance()
    {
        return reinterpret_cast<const PublishResponse *>(
                   &_PublishResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        0;

    friend void
    swap(PublishResponse& a, PublishResponse& b)
    {
        a.Swap(&b);
    }
    inline void
    Swap(PublishResponse *other)
    {
        if (other == this) return;
        if (GetArena() == other->GetArena()) {
            InternalSwap(other);
        } else {
            ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
        }
    }
    void
    UnsafeArenaSwap(PublishResponse *other)
    {
        if (other == this) return;
        GOOGLE_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    /* implements Message ---------------------------------------------- */

    inline PublishResponse *
    New() const final
    {
        return CreateMaybeMessage<PublishResponse>(nullptr);
    }

    PublishResponse *
    New(::PROTOBUF_NAMESPACE_ID::Arena *arena) const final
    {
        return CreateMaybeMessage<PublishResponse>(arena);
    }
    void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
    void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
    void CopyFrom(const PublishResponse& from);
    void MergeFrom(const PublishResponse& from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final;
    ::PROTOBUF_NAMESPACE_ID::uint8 *_InternalSerialize(
        ::PROTOBUF_NAMESPACE_ID::uint8 * target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream * stream) const final;
    int
    GetCachedSize() const final
    {
        return _cached_size_.Get();
    }

private:
    inline void SharedCtor();
    inline void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(PublishResponse *other);
    friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
    static ::PROTOBUF_NAMESPACE_ID::StringPiece
    FullMessageName()
    {
        return "gnmi_dialout.PublishResponse";
    }
protected:
    explicit PublishResponse(::PROTOBUF_NAMESPACE_ID::Arena *arena);
private:
    static void ArenaDtor(void *object);
    inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena *arena);
public:

    ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
private:
    static ::PROTOBUF_NAMESPACE_ID::Metadata
    GetMetadataStatic()
    {
        ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gnmi_5fdialout_2eproto);
        return ::descriptor_table_gnmi_5fdialout_2eproto.file_level_metadata[kIndexInFileMessages];
    }

public:

    /* nested types ---------------------------------------------------- */

    /* accessors ------------------------------------------------------- */

    enum : int {
        kPersistentSubscriptionNameFieldNumber = 1,
    };
    /* string persistentSubscriptionName = 1; */
    void clear_persistentsubscriptionname();
    const std::string& persistentsubscriptionname() const;
    void set_persistentsubscriptionname(const std::string& value);
    void set_persistentsubscriptionname(std::string && value);
    void set_persistentsubscriptionname(const char *value);
    void set_persistentsubscriptionname(const char *value, size_t size);
    std::string *mutable_persistentsubscriptionname();
    std::string *release_persistentsubscriptionname();
    void set_allocated_persistentsubscriptionname(std::string *persistentsubscriptionname);
    GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
                                       "    string fields are deprecated and will be removed in a"
                                       "    future release.")
    std::string * unsafe_arena_release_persistentsubscriptionname();
    GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
                                       "    string fields are deprecated and will be removed in a"
                                       "    future release.")
    void unsafe_arena_set_allocated_persistentsubscriptionname(
        std::string *persistentsubscriptionname);
private:
    const std::string& _internal_persistentsubscriptionname() const;
    void _internal_set_persistentsubscriptionname(const std::string& value);
    std::string *_internal_mutable_persistentsubscriptionname();
public:

    /* @@protoc_insertion_point(class_scope:gnmi_dialout.PublishResponse) */
private:
    class _Internal;

    template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
    typedef void InternalArenaConstructable_;
    typedef void DestructorSkippable_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr persistentsubscriptionname_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_gnmi_5fdialout_2eproto;
};
/* =================================================================== */


/* =================================================================== */

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  /* __GNUC__ */
/* PublishResponse */

/* string persistentSubscriptionName = 1; */
inline void
PublishResponse::clear_persistentsubscriptionname()
{
    persistentsubscriptionname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string&
PublishResponse::persistentsubscriptionname() const
{
    /* @@protoc_insertion_point(field_get:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
    return _internal_persistentsubscriptionname();
}
inline void
PublishResponse::set_persistentsubscriptionname(const std::string& value)
{
    _internal_set_persistentsubscriptionname(value);
    /* @@protoc_insertion_point(field_set:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
}
inline std::string *
PublishResponse::mutable_persistentsubscriptionname()
{
    /* @@protoc_insertion_point(field_mutable:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
    return _internal_mutable_persistentsubscriptionname();
}
inline const std::string&
PublishResponse::_internal_persistentsubscriptionname() const
{
    return persistentsubscriptionname_.Get();
}
inline void
PublishResponse::_internal_set_persistentsubscriptionname(const std::string& value)
{

    persistentsubscriptionname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void
PublishResponse::set_persistentsubscriptionname(std::string && value)
{

    persistentsubscriptionname_.Set(
        &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
    /* @@protoc_insertion_point(field_set_rvalue:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
}
inline void
PublishResponse::set_persistentsubscriptionname(const char *value)
{
    GOOGLE_DCHECK(value != nullptr);

    persistentsubscriptionname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
                                    GetArena());
    /* @@protoc_insertion_point(field_set_char:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
}
inline void
PublishResponse::set_persistentsubscriptionname(const char *value,
                                                size_t size)
{

    persistentsubscriptionname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
                                        reinterpret_cast<const char *>(value), size), GetArena());
    /* @@protoc_insertion_point(field_set_pointer:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
}
inline std::string *
PublishResponse::_internal_mutable_persistentsubscriptionname()
{

    return persistentsubscriptionname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string *
PublishResponse::release_persistentsubscriptionname()
{
    /* @@protoc_insertion_point(field_release:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
    return persistentsubscriptionname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void
PublishResponse::set_allocated_persistentsubscriptionname(std::string *persistentsubscriptionname)
{
    if (persistentsubscriptionname != nullptr) {

    } else {

    }
    persistentsubscriptionname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), persistentsubscriptionname,
                                             GetArena());
    /* @@protoc_insertion_point(field_set_allocated:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
}
inline std::string *
PublishResponse::unsafe_arena_release_persistentsubscriptionname()
{
    /* @@protoc_insertion_point(field_unsafe_arena_release:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
    GOOGLE_DCHECK(GetArena() != nullptr);

    return persistentsubscriptionname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                                                          GetArena());
}
inline void
PublishResponse::unsafe_arena_set_allocated_persistentsubscriptionname(
    std::string *persistentsubscriptionname)
{
    GOOGLE_DCHECK(GetArena() != nullptr);
    if (persistentsubscriptionname != nullptr) {

    } else {

    }
    persistentsubscriptionname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                                                        persistentsubscriptionname, GetArena());
    /* @@protoc_insertion_point(field_unsafe_arena_set_allocated:gnmi_dialout.PublishResponse.persistentSubscriptionName) */
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  /* __GNUC__ */

/* @@protoc_insertion_point(namespace_scope) */

}  /* namespace gnmi_dialout */

/* @@protoc_insertion_point(global_scope) */

#include <google/protobuf/port_undef.inc>
#endif  /* GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gnmi_5fdialout_2eproto */
