swagger: '2.0'
info:
  description: 'swagger API for Terminal Optical Amplifier device [http://swagger.io](http://swagger.io)'
  version: 0.0.1
  title: Swagger OMT
  termsOfService: 'http://swagger.io/terms/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: omg.swagger.io
basePath: /
securityDefinitions:
  TOKEN:
    type: apiKey
    name: TOKEN
    in: header
tags:
  - name: OMT
    description: 'Base OMT device '
schemes:
  - https
paths:
  /omt/config:
    post:
      tags:
        - omt
      summary: push config to the device
      description: push full json object of config to device
      operationId: pushConfig
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: config object to be pushed to the device
          required: true
          schema:
            $ref: '#/definitions/FullConfig'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
    get:
      tags:
        - omt
      summary: get running config from the device
      description: get full json config of the device
      operationId: getConfig
      produces:
        - application/json
      responses:
        '200':
          description: succesful operation
          schema:
            $ref: '#/definitions/FullConfig'
  /omt/config/pre-amp/:
    post:
      tags:
        - omt
      summary: push pre-amp config to the device
      operationId: pushPreAmpConfig
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: config object to be pushed to the device
          required: true
          schema:
            $ref: '#/definitions/Pre-Amp'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
    put:
      tags:
        - omt
      summary: update one or more properties of pre-amp to the device
      operationId: updatePreAmpConfig
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: one or more properties of pre-amp to be updated to the device
          required: false
          schema:
            $ref: '#/definitions/Pre-Amp'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input

  /omt/config/booster-amp/:
    post:
      tags:
        - omt
      summary: push booster-amp config to the device
      operationId: pushBoosterAmpConfig
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: config object to be pushed to the device
          required: true
          schema:
            $ref: '#/definitions/Booster-Amp'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
    put:
      tags:
        - omt
      summary: update one or more properties of booster-amp to the device
      operationId: updateBoosterAmpConfig
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: one or more properties of booster-amp to be updateed to the device
          required: false
          schema:
            $ref: '#/definitions/Booster-Amp'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input

  /omt/config/system/:
    post:
      tags:
        - omt
      summary: push system config to the device
      operationId: pushSystemConfig
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: config object to be pushed to the device
          required: true
          schema:
            $ref: '#/definitions/System'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
    put:
      tags:
        - omt
      summary: update one or more properties of system to the device
      operationId: updateSystemConfig
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: update one or more properties of system to be updated to the device
          required: false
          schema:
            $ref: '#/definitions/System'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
  /omt/inventory:
    get:
      tags:
        - omt
      summary: get device inventory
      description: retrieves inventory information
      operationId: getInventory
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Inventory'
        '405':
          description: invalid input
  /omt/current-pm-values:
    get:
      tags:
        - omt
      summary: get device pm values
      description: retrieves pm values
      operationId: getPMs
      produces:
        - application/json
      responses:
        '200':
          description: succesful operation
          schema:
            $ref: '#/definitions/CurrentPmValues'
        '405':
          description: invalid request
  /omt/past-pm-values:
    get:
      tags:
        - omt
      summary: get pm values since last retrieval
      description: retrieves pm values
      operationId: getPms
      produces:
        - application/json
      responses:
        '200':
          description: succesful operation
          schema:
            $ref: '#/definitions/PmFormat'
        '405':
          description: invalid request
  /omt/current-alarms:
    get:
      tags:
        - omt
      summary: get device alarms
      description: retrieves alarms
      operationId: getAlarms
      produces:
        - application/json
      responses:
        '200':
          description: succesful operation
          schema:
            $ref: '#/definitions/Alarms'
        '405':
          description: invalid request
  /omt/operations/coldrestart:
    post:
      tags:
        - omt
      summary: cold restart the entity
      description: initiate coldrestart
      operationId: coldRestart
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: restart state
          required: true
          schema:
            $ref: '#/definitions/Restart'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid Input
  /omt/operations/warmrestart:
    post:
      tags:
        - omt
      summary: warm restart the entity
      description: initiate warmrestart
      operationId: warmRestart
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: restart state
          required: true
          schema:
            $ref: '#/definitions/Restart'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid Input
  /omt/user:
    post:
      tags:
        - omt
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created login user
          required: true
          schema:
            $ref: '#/definitions/Users'
      responses:
        '200':
          description: successful operation
        '400':
          description: failed to add user
    get:
      tags:
        - omt
      summary: get provisioned users on device
      description: this will return provisioned users on device
      operationId: getUsers
      produces:
        - application/json
      responses:
        '200':
          description: succesful operation
          schema:
            $ref: '#/definitions/Users'
        '405':
          description: invalid input
  /omt/user/login:
    get:
      tags:
        - omt
      summary: Logs user into the system
      description: logs user in
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      security: 
        - TOKEN: []
      responses:
        '200':
          description: successful operation
          headers:
            TOKEN:
              description: token authentication
              type: string
        '400':
          description: Invalid username/password supplied
  /omt/user/logout:
    parameters:
      - name: TOKEN
        in: header
        description: token to be passed as a header. return TOKEN after login successful
        required: true
        type: string
    get:
      tags:
        - omt
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
      responses:
        default:
          description: successful operation
  '/omt/user/{username}':
    delete:
      tags:
        - omt
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /omt/software/upgrade:
    post:
      tags:
        - omt 
      summary: push and upgrade software
      description: download software and upgrade it
      operationId: Upgrade
      produces: 
        - application/json
      parameters:
        - in: body
          name: body
          description: downloading and loading sw
          required: true
          schema:
            $ref: '#/definitions/SoftwareLoad'
      responses:
        '405':
          description: invalid data 
        '200':
          description: successful operation
    get:
      tags:
        - omt
      summary: get software upgrade state from the device
      description: ''
      operationId: getUpgradeState
      produces:
        - application/json
      responses:
        '200':
           description: successful operation
           schema:
              $ref: '#/definitions/UpgradeState'
        '405':
           description: invalid input
  /omt/software/download:
    post:
      tags:
      - omt 
      summary: push bundle file to AMP
      description: download bundle file
      operationId: Download
      produces: 
        - application/json
      parameters:
        - in: body
          name: body
          description: downloading bundle file
          required: true
          schema:
            $ref: '#/definitions/SoftwareLoad'
      responses:
        '405':
          description: invalid input
        '200':
          description: successful operation
  /omt/software/activate:
    post:
      tags:
      - omt 
      summary: upgrade software
      description: install software
      operationId: Activate
      produces: 
        - application/json
      parameters: []
      responses:
        '405':
          description: invalid input
        '200':
          description: successful operation
    get:
      tags:
        - omt
      summary: get software upgrade state from the device
      description: ''
      operationId: getUpgradeState2
      produces:
        - application/json
      responses:
        '200':
           description: successful operation
           schema:
              $ref: '#/definitions/UpgradeState'
        '405':
           description: invalid input
  /omt/operations/transfer-file:
    post:
      tags:
      - omt 
      summary: transfer file (logs, pm, alarm) to from AMP to external scp server
      operationId: transferFile
      produces: 
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TransferFile'
      responses:
        '405':
          description: invalid input 
        '200':
          description: successful operation
  /omt/remote-node-info:
    get:
      tags:
        - omt
      summary: get remote device information
      description: retrieves remote node information
      operationId: getRemoteNode
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RemoteNode'
        '405':
          description: invalid input
  /omt/config/auto-control:
    post:
      tags:
        - omt
      summary: configurations for automatic control of span loss and CD at initial turnup.
      operationId: autoConfig
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Auto-Control'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
    get:
      tags:
        - omt
      summary: get automatic control configurations from the device
      description: ''
      operationId: getAutoConfig
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Auto-Control'
        '405':
          description: invalid input
  /omt/operations/auto-gain:
    post:
      tags:
        - omt
      summary: Automatic control of gain and span loss.
      description: trigger automatic control of span loss (span equalization)
      operationId: autoSpanEq
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
        '201':
          description: operation in progress
        '406':
          description: failed operation

    get:
      tags:
        - omt
      summary: get the status and/or results of automatic control of span loss
      description: ''
      operationId: getAutoSpan
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Auto-Gain'
        '406':
          description: failed operation
  /omt/operations/auto-todc:
    post:
      tags:
        - omt
      summary: Automatic control of TODC CD compensation.
      description: ''
      operationId: autoTODC
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
        '201':
          description: operation in progress
        '406':
          description: failed operation
    get:
      tags:
        - omt
      summary: get automatic control cd from the device
      description: ''
      operationId: getAutoTodc
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Auto-Todc'
        '406':
          description: failed operation
  /omt/system/lamptest:
    post:
      tags:
        - omt
      summary: LED test on front panel.
      description: ''
      operationId: lampTest
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  /omt/config/threshold:
    post:
      tags:
        - omt
      summary: configurations threshold.
      operationId: threshold
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Threshold'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
    get:
      tags:
        - omt
      summary: get threshold
      description: ''
      operationId: getThreshold
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Threshold'
        '405':
          description: invalid input

definitions:
  FullConfig:
      type: object
      properties:
        system:
          $ref: '#/definitions/System'
        booster-amp:
          $ref: '#/definitions/Booster-Amp'
        pre-amp:
          $ref: '#/definitions/Pre-Amp'
  Restart:
    type: object
    properties:
      entity:
        type: string
        example: module
        enum:
          - module
          - scc
          - pre-amp
          - booster-amp
          - ocm
  Users:
    type: object
    properties:
      'user#':
        type: object
        properties:
          username:
            type: string
            title: username
            example: admin
          password:
            type: string
            title: password
            example: 12345
          access:
            type: string
            title: access level
            example: 'full'
            enum:
              - full
              - readonly
  System:
    type: object
    properties:
      nodename:
        type: string
        title: The hostname
        description: set device hostname
        example: syd23-bwu11-omt
      ip-address:
        type: string
        title: The Ip-address .
        description: set node ip.
        example: 1.1.1.2
      netmask:
        type: string
        title: netmask
        description: set netmask
        example: 255.255.0.0
      gateway:
        type: string
        title: Gateway
        description: set gateway
        example: 1.1.1.1
      ntp-ip-1:
        type: string
        title: The Ntp
        description: set NTP server ip
        example: 1.1.1.3
      ntp-ip-2:
        type: string
        title: The Ntp
        description: set NTP server ip
        example: 1.1.1.30
      syslog-ip-1:
        type: string
        title: The Syslog ip.
        description: set syslog server ip
        example: 1.1.1.4
      syslog-ip-2:
        type: string
        title: The Syslog ip.
        description: set syslog server ip
        example: 1.1.1.40
      tacacs-ip-1:
        type: string
        title: The Tacacs ip
        description: set tacacs server
        example: 1.1.1.5
      tacacs-server-secret-1:
        type: string
        title: The TACACS+ server secret key
        description: set the secret key of tacacs server
        example: Key@123
      tacacs-ip-2:
        type: string
        title: The Tacacs ip
        description: set tacacs server
        example: 1.1.1.50
      tacacs-server-secret-2:
        type: string
        title: The TACACS+ server secret key
        description: set the secret key of tacacs server
        example: Key@234
      fiber-type:  
        type: string
        description: for calculation tcdc value. Refer to SFS Table 3-1.
        example: ssmf
        enum:
        - ssmf
        - allwave
        - teralight
        - truewave-reach
        - leaf
        - metrocore
        - truewave-rs
        - truewave-cplus
        - ls-fiber-type
        - dsf-fiber-type
      launching-power-per-channel:
        type: number
        description: per channel output power at LineOut port.
        example: 4.0      
      number-of-carriers:
        type: integer
        description: to number of carriers in the system. In a 2-lambd 100G PAM4 system, it is 2 carriers per channel, so this property must be an even number.
        example: 8 

  Booster-Amp:
    type: object
    properties:
      target-gain:
        type: number
        title: The Target-gain.
        description: gain setting in DB.
        example: 16.5
      target-gain-tilt:
        type: integer
        title: 'The Target-gain-tilt '
        description: setting tilt.
        example: 0
      voa:
        type: integer
        title: The Voa.
        description: setting attenuation.
        example: 0
      apr-enable:  
        type: string
        title: APR feature setting.
        description: to enable or disable APR feature.
        example: enable
        enum:
          - enable
          - disable 
      state:
        type: string
        title: The State of the amp.
        description: turn amp up or down
        example: up
        enum:
          - up 
          - down
  Pre-Amp:
    type: object
    properties:
      target-gain:
        type: integer
        title: The Target-gain.
        description: to set gain value.
        example: 13
      target-gain-tilt:
        type: integer
        title: The Target-gain-tilt value.
        description: to set tilt.
        example: 0
      todc-value:
        type: number
        title: The todc-cd-value schema.
        description: setting the dispersion compensation value.
        example: 100.1
      apr-enable:  
        type: string
        title: APR feature setting.
        description: to enable or disable APR feature.
        example: enable
        enum: 
          - enable
          - disable 
      state:
        type: string
        title: state of amp.
        description: to turn amp on and off.
        example: up
        enum:
          - up 
          - down
  Inventory:
    type: object
    properties:
      serial-number-module:
        type: string
        example: SR12456
      part-number-module:
        type: string
        example: PN1234
      software-version-module:
        type: string
        example: SV-1.2      
      vendor:
        type: string
        example: Molex
      serial-number-scc:
        type: string
        example: SR12456
      part-number-scc:
        type: string
        example: PN1234
      serial-number-pa:
        type: string
        example: SR12456
      part-number-pa:
        type: string
        example: PN1234
      serial-number-ba:
        type: string
        example: SR12456
      part-number-ba:
        type: string
        example: PN1234
      serial-number-ocm:
        type: string
        example: SR12456
      part-number-ocm:
        type: string
        example: PN1234
      serial-number-otdr:
        type: string
        example: SR12456
      part-number-otdr:
        type: string
        example: PN1234
      serial-number-power-a:
        type: string
        example: SR12456
      part-number-power-a:
        type: string
        example: PN1234
      serial-number-power-b:
        type: string
        example: SR12456
      part-number-power-b:
        type: string
        example: PN1234
      serial-number-fan-a:
        type: string
        example: SR12456
      part-number-fan-a:
        type: string
        example: PN1234
      serial-number-fan-b:
        type: string
        example: SR12456
      part-number-fan-b:
        type: string
        example: PN1234
      serial-number-fan-c:
        type: string
        example: SR12456
      part-number-fan-c:
        type: string
        example: PN1234
      serial-number-fan-d:
        type: string
        example: SR12456
      part-number-fan-d:
        type: string
        example: PN1234
  Alarms:
    type: object
    properties:
      UniqueAlarmEntity#:
        $ref: '#/definitions/AlarmName'
  AlarmName:
    type: object
    properties:
      alarm-severity:
        type: string
        description: alarm severity
        example: 'NSA'
        enum:
        - SA
        - NSA
      timestamp:
        type: string
        description: timestamp for when alarm raised
        example: '2020-06-20T17:01:44Z'
  CurrentPmValues:
    type: object
    properties:
      timestamp:
        type: string
        description: timestamp for when pm getted
        example: '2020-07-17T13:17:16Z'
      line-output-power:
        type: number
      line-input-power:
        type: number
      pre-amp-input-power:
        type: number
      pre-amp-output-power:
        type: number
      booster-amp-input-power:
        type: number
      booster-amp-output-power:
        type: number
      osc-output-power:
        type: number
      osc-input-power:
        type: number
      pre-amp-gain:
        type: number
      booster-amp-gain: 
        type: number
      booster-voa-attenuation:
        type: number 
      pre-amp-mid-stage-input:  
        type: number
      pre-amp-mid-stage-output:  
        type: number
      booster-amp-mid-stage-input:  
        type: number
      booster-amp-mid-stage-output:  
        type: number
      todc-dispersion:
        type: number
  SoftwareLoad:
    type: object
    properties:
      user-id:
        type: string
        description: scp server login username
      password:
        type: string
        description: scp server login password
      source-file-name:
        type: string
        description: source file-name on scp server. <scp-server-ip>:<source-file-name>
        example: 172.16.166.232:/AMPBundle/FirmwareBundle_0.01.0001
  UpgradeState:
    type: object
    properties:
      state:
        type: string
        description: Display the step of upgrade.
        example: committed
        enum:
          - committed
          - downloading
          - ready to activate
          - activating
      status:
        type: string
        description: Display the status of upgrade.
        example: success
        enum:
          - success
          - in-progress
          - failure
          - check-error
      progress:
        type: integer
        description: percentage of upgrade progress.
        example: 100 
      filesize:
        type: string
        description: Downloaded bundle file size. The value is valid when state is "ready to activate".
        example: 1022334 bytes
      hitless:
        type: string
        description: yes:hitless or no:non-hitless. The value is valid when state is "ready to activate".
        example: yes
        enum:
          - yes
          - no
  PmFormat:
    type: object
    properties: 
      UniqueTimestamp#:
        type: object
        properties:
          line-output-power:
            type: number
          line-input-power:
            type: number
          pre-amp-input-power:
            type: number
          pre-amp-output-power:
            type: number
          booster-amp-input-power:
            type: number
          booster-amp-output-power:
            type: number
          osc-output-power:
            type: number
          osc-input-power:
            type: number
          pre-amp-gain:
            type: number
          booster-amp-gain: 
            type: number
          booster-voa-attenuation:
            type: number 
          pre-amp-mid-stage-input:  
            type: number
          pre-amp-mid-stage-output:  
            type: number
          booster-amp-mid-stage-input:  
            type: number
          booster-amp-mid-stage-output:  
            type: number
          todc-dispersion:
            type: number
  TransferFile:
    type: object
    properties:
      user-id:
        type: string
        description: scp server login username
      password:
        type: string
        description: scp server login password
      source-file-name:
        type: string
        description: local source file-name on AMP.
        example: /var/log/syslog_notification.csv
      destination-file-name:
        type: string
        description: destination file-name on scp server. <scp-server-ip>:<destination-file-name>
        example: 172.16.166.232:/tmp/syslog_notification.csv
  RemoteNode:
    type: object
    properties:
      nodename:
        type: string
        title: The remote node name
        description: remote node name
        example: syd23-bwu11-omt
      ip-address:
        type: string
        title: The remote ip address
        description: remote ip address
        example: 10.0.1.200
  Auto-Control:
    type: object
    properties:
      number-of-carriers:
        type: integer
        description: number of carriers in the system. In a 2-lambd 100G PAM4 system, it is 2 carriers per channel, so this property must be an even number.
        example: 10
  Auto-Gain:
    type: object
    properties: 
      span-loss:
        type: number
        description: measured span loss between local AMP and downstream AMP
        example: 10.5      
      pre-amp-gain: 
        type: number
        description: actual gain set on downstream pre-amplifier
        example: 10.5
      booster-amp-gain: 
        type: number
        description: actual gain set on local booster-amplifier
        example: 10.5
      booster-voa-attenuation: 
        type: number
        description: attenuation applied on local booster VOA
        example: 10.5
      progress:
        type: integer
        description: percentage of automatic control progress. As this operation is usually finished very quickly, the response to this API is usually 100%.
        example: 10
      state:
        type: integer
        description: "Display the state of automatic control.
          0 - success; 
          1 - in progress; 
          2 - failed state, Span loss greater than 22dB. Accuracy +- 1dB;
          3 - failed state, BA input single channel power less then -19dBm. Accuracy +- 0.5dB;
          4 - Other error, please try again."
        example: 1
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
  Auto-Todc:
    type: object
    properties:
      todc-value:
        type: number
        description: TODC cd value.
        example: 10.5
      progress:
        type: integer
        description: percentage of automatic control progress. As this operation is usually finished very quickly, the response to this API is usually 100%
        example: 100
      state:
        type: integer
        description: "Display the state of automatic control.
          0 - success
          1 - in progress 
          2 - TODC config failure."
        example: 1
        enum: 
          - 0
          - 1
          - 2
  Threshold:
    type: object
    properties:
      span-loss-threshold:
        type: number
        description: span loss threshold.
        example: 1.5

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
